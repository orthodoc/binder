service cloud.firestore {
  match /databases/{database}/documents {

    // secure by default
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }

    // only users can read and write their docs
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if belongsTo(userId);
    }

    // Functions for implemeting the rules
    function isSignedIn() {
      return request.auth != null;
    }

    function belongsTo(userId) {
      return request.auth.uid == userId;
    }

    function emailVerified() {
      return request.auth.token.email_verified;
    }

    function userExists() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    // [READ] Data that exists on the Firestore document
    function existingData() {
      return resource.data;
    }
    
    // [WRITE] Data that is sent to a Firestore document
    function incomingData() {
      return request.resource.data;
    }

    function isUser(userId) {
      return request.auth.uid == userId;
    }

    function userEmail(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.email;
    }

    function isMemberOf(groupId) {
      return !((get(/databases/$(database)/documents/groups/$(groupId)).data.members).indexOf(request.auth.uid) < 0);
    }
  }
}
